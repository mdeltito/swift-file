#!/usr/bin/env ruby
require "optparse"
require "highline/import"
require "swift_file"

options = {}

optparse = OptionParser.new do|opts|
  opts.banner = "Usage: swift_file [options] file1 file2 ..."

  options[:group] = nil
  opts.on( '-g', '--group GROUP', 'Add this file to a group' ) do |group|
    options[:group] = group
  end

  options[:expiry] = nil
  opts.on( '-e', '--expires EXPIRY', "Set the length of time until this file expires [#{SwiftFile::SwiftUpload::SWIFTFILE_EXPIRY_OPTIONS.join(' ')}]" ) do |expiry|
    options[:expiry] = expiry
  end

  options[:password] = nil
  opts.on( '-p[PASSWORD]', 'Supply a password to encrypt the file.' ) do |password|
    options[:password] = password
  end
end

# Check if user has (correctly) supplied the -p flag without the password
password_opt_supplied = ARGV.include?('-p')

begin
  optparse.parse!
rescue OptionParser::InvalidOption, OptionParser::MissingArgument => e
  puts "ERROR: #{e}"
end

if options[:password] == nil && password_opt_supplied
  # FIXME: highline is not behaving on my installation, and
  #   disabling echo causes an infinte loop of errors
  options[:password] = ask("Enter a password: ") # { |q| q.echo = false }
end

begin
  if ARGV.empty?
    raise "no files supplied"
  end

  sf = SwiftFile::SwiftUpload.new(options)

  ARGV.each do |filepath|
    sf.add_file File.new(filepath)
  end

  sf.transfer
  puts sf.url
rescue => e
  puts "ERROR: #{e}"
end
